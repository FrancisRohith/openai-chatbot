{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/vboxuser/Documents/repos/openai-chatbot/src/app/config.js"],"sourcesContent":["const { createChatBotMessage } = require(\"react-chatbot-kit\");\n\nconst config = {\n    botName: 'Jarvis',\n    initialMessages:[\n        createChatBotMessage(\"Hello I'm travel expert, how can i help you\")\n    ]\n}\n\nexport default config;"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,oBAAoB,EAAE;AAE9B,MAAM,SAAS;IACX,SAAS;IACT,iBAAgB;QACZ,qBAAqB;KACxB;AACL;uCAEe"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///home/vboxuser/Documents/repos/openai-chatbot/src/app/ActionProvider.js"],"sourcesContent":["import OpenAI from \"openai\";\nimport { createChatBotMessage, createClientMessage, createCustomMessage } from \"react-chatbot-kit\";\n\nconst openai = new OpenAI({\n    apiKey: \"094f428832624c0693064d8739c57cca\",\n    baseURL: 'https://api.aimlapi.com/',\n    dangerouslyAllowBrowser: true\n})\n\nclass ActionProvider{\n    createChatBotMessage\n    setStateFunc\n    createClientMessage\n    stateRef \n    createCustomMessage\n\n    constructor(\n        createChatBotMessage,\n        setStateFunc,\n        createClientMessage,\n        stateRef,\n        createCustomMessage,\n        ...rest\n    ){\n        this.createChatBotMessage = createChatBotMessage;\n        this.setState = setStateFunc;\n        this.createClientMessage = createClientMessage,\n        this.state = stateRef;\n        this.createCustomMessage = createCustomMessage;\n    }\n\n    callGenAi = async (prompt) =>{\n        const chatCompletion = await openai.chat.completions.create(\n            {\n                model: 'gpt-3.5-turbo',\n                messages: [\n                    {role: 'system', content: \"You're a tourist expert\"},\n                    {role: 'user', content: prompt}\n                ],\n                temperature: 0.5,\n                max_tokens: 50\n            }\n        )\n        return chatCompletion.choices[0].message.content\n    }\n\n    timer = ms => new Promise (res=>setTimeout(res,ms))\n\n    generateResponseMessage = async (userMessage)=>{\n        const responseFromGpt = await this.callGenAi(userMessage)\n        let message;\n        let numberNoLines = responseFromGpt.split('\\n').length\n        for(let i=0;i<numberNoLines;i++){\n            const msg = responseFromGpt.split('\\n')[i]\n            if(msg.length){\n                message = this.createChatBotMessage(msg)\n               // message.content = msg;\n               console.log(msg)\n                this.updateChatBotMessage(message)\n                \n            }\n            await this.timer(1000)\n        }\n    }\n    respond = (message) =>{\n        this.generateResponseMessage(message)\n    }\n    updateChatBotMessage = (message)=>{\n        this.setState(prevState =>({\n            ...prevState,\n            messages: [...prevState.messages, message]\n        }))\n    }\n}\n\nexport default ActionProvider;"],"names":[],"mappings":";;;AACA;AADA;;;AAGA,MAAM,SAAS,IAAI,gJAAA,CAAA,UAAM,CAAC;IACtB,QAAQ;IACR,SAAS;IACT,yBAAyB;AAC7B;AAEA,MAAM;IACF,qBAAoB;IACpB,aAAY;IACZ,oBAAmB;IACnB,SAAQ;IACR,oBAAmB;IAEnB,YACI,oBAAoB,EACpB,YAAY,EACZ,mBAAmB,EACnB,QAAQ,EACR,mBAAmB,EACnB,GAAG,IAAI,CACV;QACG,IAAI,CAAC,oBAAoB,GAAG;QAC5B,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,mBAAmB,GAAG,qBAC3B,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,mBAAmB,GAAG;IAC/B;IAEA,YAAY,OAAO;QACf,MAAM,iBAAiB,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CACvD;YACI,OAAO;YACP,UAAU;gBACN;oBAAC,MAAM;oBAAU,SAAS;gBAAyB;gBACnD;oBAAC,MAAM;oBAAQ,SAAS;gBAAM;aACjC;YACD,aAAa;YACb,YAAY;QAChB;QAEJ,OAAO,eAAe,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;IACpD,EAAC;IAED,QAAQ,CAAA,KAAM,IAAI,QAAS,CAAA,MAAK,WAAW,KAAI,KAAI;IAEnD,0BAA0B,OAAO;QAC7B,MAAM,kBAAkB,MAAM,IAAI,CAAC,SAAS,CAAC;QAC7C,IAAI;QACJ,IAAI,gBAAgB,gBAAgB,KAAK,CAAC,MAAM,MAAM;QACtD,IAAI,IAAI,IAAE,GAAE,IAAE,eAAc,IAAI;YAC5B,MAAM,MAAM,gBAAgB,KAAK,CAAC,KAAK,CAAC,EAAE;YAC1C,IAAG,IAAI,MAAM,EAAC;gBACV,UAAU,IAAI,CAAC,oBAAoB,CAAC;gBACrC,yBAAyB;gBACzB,QAAQ,GAAG,CAAC;gBACX,IAAI,CAAC,oBAAoB,CAAC;YAE9B;YACA,MAAM,IAAI,CAAC,KAAK,CAAC;QACrB;IACJ,EAAC;IACD,UAAU,CAAC;QACP,IAAI,CAAC,uBAAuB,CAAC;IACjC,EAAC;IACD,uBAAuB,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,CAAA,YAAY,CAAC;gBACvB,GAAG,SAAS;gBACZ,UAAU;uBAAI,UAAU,QAAQ;oBAAE;iBAAQ;YAC9C,CAAC;IACL,EAAC;AACL;uCAEe"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/vboxuser/Documents/repos/openai-chatbot/src/app/MessageParser.js"],"sourcesContent":["class MessageParser {\n    constructor(actionProvider, state){\n        this.actionProvider = actionProvider;\n        this.state = state;\n    }\n\n    parse = (message) => {\n        this.actionProvider.respond(message);\n    }\n}\n\nexport default MessageParser;"],"names":[],"mappings":";;;AAAA,MAAM;IACF,YAAY,cAAc,EAAE,KAAK,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,KAAK,GAAG;IACjB;IAEA,QAAQ,CAAC;QACL,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;IAChC,EAAC;AACL;uCAEe"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/vboxuser/Documents/repos/openai-chatbot/src/app/Components/chatbot.js"],"sourcesContent":["'use client'\nimport config  from \"../config\";\nimport Chatbot from \"react-chatbot-kit\";\n\nimport 'react-chatbot-kit/build/main.css'\nimport './chatBot.css'\nimport ActionProvider from \"../ActionProvider\";\nimport MessageParser from \"../MessageParser\";\n\n\nconst ChatComponent = ()=>{\n    return(\n        <Chatbot\n            config = {config}\n            actionProvider={ActionProvider}\n            messageParser={MessageParser}\n        />\n    )\n}\n\nexport default ChatComponent;"],"names":[],"mappings":";;;;AACA;AACA;AAIA;AACA;AAPA;;;;;;;;AAUA,MAAM,gBAAgB;IAClB,qBACI,8OAAC,yJAAA,CAAA,UAAO;QACJ,QAAU,oHAAA,CAAA,UAAM;QAChB,gBAAgB,4HAAA,CAAA,UAAc;QAC9B,eAAe,2HAAA,CAAA,UAAa;;;;;;AAGxC;uCAEe"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}